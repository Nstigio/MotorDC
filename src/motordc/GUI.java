package motordc;

import Utilitati.LinePlot;
import Utilitati.SmallNumberRenderer;
import static Utilitati.Export.PrintToTXT;
import java.io.File;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import java.util.ArrayList;
import javax.swing.JFileChooser;
// @author Bogdan Lazar

public class GUI extends javax.swing.JFrame {

    private static MotorDC motor = new MotorDC(0,0,0,0,0.);
    private ModelMotorDC model = new ModelMotorDC(motor);
    private RungeKutta rk = new RungeKutta();
    private ArrayList output = new ArrayList();
    private static DefaultTableModel modelTabel;
    public GUI() {
        initComponents();
        meniuMotor.setLocationRelativeTo(null);
        meniuIntrari.setLocationRelativeTo(null);
        meniuSimulare.setLocationRelativeTo(null);
        labelTimpStart.setText(Double.toString(rk.getX0()));
        labelTimpStop.setText(Double.toString(rk.getXn()));
        labelPas.setText(Double.toString(rk.getPasIntegrare()));
        butonGrafice.setVisible(false);
        butonExport.setVisible(false);
        selectorFisiere.changeToParentDirectory();
        selectorFisiere.setDialogTitle("Save Text File");
        selectorFisiere.setFileSelectionMode(JFileChooser.DIRECTORIES_ONLY);
        checkBoxPI.setSelected(false);
        campTuratieTinta.setText(Double.toString(model.getTuratieTinta()));
        campKp.setText(Double.toString(model.getKp()));
        campKi.setText(Double.toString(model.getKi()));
        labelTuratieTinta.setVisible(false);
        campTuratieTinta.setVisible(false);
        labelConstP.setVisible(false);
        campKp.setVisible(false);
        labelConstI.setVisible(false);
        campKi.setVisible(false);
        
        refreshModel();
        
    }
    public static void refreshModel() {
        modelTabel.setRowCount(0);
        modelTabel.addRow(new Object[]{motor.getLa_H(),motor.getRa_Ohm(),motor.getKf(),motor.getJ(),motor.getF(),motor.getVa_Volts(),motor.getSarcina()});
    }
    
   

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        meniuMotor = new javax.swing.JFrame();
        labelInductanta = new javax.swing.JLabel();
        labelRezistenta = new javax.swing.JLabel();
        labelConstantaMotor = new javax.swing.JLabel();
        labellnertie = new javax.swing.JLabel();
        campInductanta = new javax.swing.JTextField();
        campRezistenta = new javax.swing.JTextField();
        campKf = new javax.swing.JTextField();
        campFrecare = new javax.swing.JTextField();
        buttonApply = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        campInertie = new javax.swing.JTextField();
        meniuIntrari = new javax.swing.JFrame();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        campTensiuneIntrare = new javax.swing.JTextField();
        campSarcinaIntrare = new javax.swing.JTextField();
        butonAplicaIntrari = new javax.swing.JButton();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        campCurentInitial = new javax.swing.JTextField();
        campTuratieInitiala = new javax.swing.JTextField();
        checkBoxPI = new javax.swing.JCheckBox();
        labelConstP = new javax.swing.JLabel();
        labelConstI = new javax.swing.JLabel();
        campKp = new javax.swing.JTextField();
        campKi = new javax.swing.JTextField();
        labelTuratieTinta = new javax.swing.JLabel();
        campTuratieTinta = new javax.swing.JTextField();
        meniuSimulare = new javax.swing.JFrame();
        jLabel2 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        campTimpStart = new javax.swing.JTextField();
        campTimpStop = new javax.swing.JTextField();
        campPas = new javax.swing.JTextField();
        butonAplicaSimulare = new javax.swing.JButton();
        selectorFisiere = new javax.swing.JFileChooser();
        jMenuItem1 = new javax.swing.JMenuItem();
        configMotor = new javax.swing.JButton();
        butonIntrari = new javax.swing.JButton();
        butonSetariSimulare = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        javax.swing.JTable tabelMotorCurent = new javax.swing.JTable();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        labelTimpStart = new javax.swing.JLabel();
        labelTimpStop = new javax.swing.JLabel();
        labelPas = new javax.swing.JLabel();
        butonSimulare = new javax.swing.JButton();
        butonGrafice = new javax.swing.JButton();
        butonExport = new javax.swing.JButton();

        meniuMotor.setTitle("Configurare motor");
        meniuMotor.setMinimumSize(new java.awt.Dimension(440, 331));

        labelInductanta.setText("Inductanta [H]");

        labelRezistenta.setText("Resistenta [Ohm]");

        labelConstantaMotor.setText("Constanta motor");

        labellnertie.setText("Coeficient de frecare");

        campInductanta.setMinimumSize(new java.awt.Dimension(100, 22));
        campInductanta.setPreferredSize(new java.awt.Dimension(100, 22));

        campRezistenta.setMinimumSize(new java.awt.Dimension(100, 22));
        campRezistenta.setPreferredSize(new java.awt.Dimension(100, 22));

        campKf.setMinimumSize(new java.awt.Dimension(100, 22));
        campKf.setPreferredSize(new java.awt.Dimension(100, 22));
        campKf.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                campKfActionPerformed(evt);
            }
        });

        campFrecare.setPreferredSize(new java.awt.Dimension(100, 22));

        buttonApply.setText("Aplica");
        buttonApply.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonApplyActionPerformed(evt);
            }
        });

        jLabel1.setText("Moment de inertie [Kg.m^2]");

        campInertie.setMinimumSize(new java.awt.Dimension(100, 22));
        campInertie.setPreferredSize(new java.awt.Dimension(100, 22));
        campInertie.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                campInertieActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout meniuMotorLayout = new javax.swing.GroupLayout(meniuMotor.getContentPane());
        meniuMotor.getContentPane().setLayout(meniuMotorLayout);
        meniuMotorLayout.setHorizontalGroup(
            meniuMotorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(meniuMotorLayout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addGroup(meniuMotorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, meniuMotorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(labellnertie, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(labelInductanta, javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(labelConstantaMotor, javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(labelRezistenta, javax.swing.GroupLayout.Alignment.LEADING))
                .addGap(18, 18, 18)
                .addGroup(meniuMotorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(buttonApply, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(campFrecare, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(campInertie, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(campRezistenta, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(campKf, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(campInductanta, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(169, 169, 169))
        );
        meniuMotorLayout.setVerticalGroup(
            meniuMotorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(meniuMotorLayout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addGroup(meniuMotorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labelInductanta)
                    .addComponent(campInductanta, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(meniuMotorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labelRezistenta)
                    .addComponent(campRezistenta, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(meniuMotorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labelConstantaMotor)
                    .addComponent(campKf, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(meniuMotorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labellnertie)
                    .addComponent(campFrecare, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(meniuMotorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(campInertie, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(buttonApply)
                .addContainerGap(122, Short.MAX_VALUE))
        );

        meniuIntrari.setTitle("Configurare intrari");
        meniuIntrari.setLocationByPlatform(true);
        meniuIntrari.setMinimumSize(new java.awt.Dimension(478, 373));

        jLabel3.setText("Tensiune Intrare [V]");

        jLabel4.setText("Sarcina [N.m]");

        campTensiuneIntrare.setMinimumSize(new java.awt.Dimension(100, 22));
        campTensiuneIntrare.setPreferredSize(new java.awt.Dimension(100, 22));
        campTensiuneIntrare.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                campTensiuneIntrareActionPerformed(evt);
            }
        });

        campSarcinaIntrare.setMinimumSize(new java.awt.Dimension(100, 22));
        campSarcinaIntrare.setPreferredSize(new java.awt.Dimension(100, 22));

        butonAplicaIntrari.setText("Aplica");
        butonAplicaIntrari.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                butonAplicaIntrariActionPerformed(evt);
            }
        });

        jLabel10.setText("Curent la momentul initial[A]");

        jLabel11.setText("Turatia la momentul initial[RPM]");

        checkBoxPI.setText("Controler PI");
        checkBoxPI.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                checkBoxPIActionPerformed(evt);
            }
        });

        labelConstP.setText("Constanta P");

        labelConstI.setText("Constanta I");

        campKp.setMaximumSize(new java.awt.Dimension(64, 22));

        campKi.setMaximumSize(new java.awt.Dimension(64, 22));
        campKi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                campKiActionPerformed(evt);
            }
        });

        labelTuratieTinta.setText("Turatia tinta");

        campTuratieTinta.setMaximumSize(new java.awt.Dimension(64, 22));

        javax.swing.GroupLayout meniuIntrariLayout = new javax.swing.GroupLayout(meniuIntrari.getContentPane());
        meniuIntrari.getContentPane().setLayout(meniuIntrariLayout);
        meniuIntrariLayout.setHorizontalGroup(
            meniuIntrariLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(meniuIntrariLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(meniuIntrariLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(meniuIntrariLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(labelTuratieTinta, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel10, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel11, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel4, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel3, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(labelConstP, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(labelConstI, javax.swing.GroupLayout.PREFERRED_SIZE, 155, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(meniuIntrariLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(meniuIntrariLayout.createSequentialGroup()
                        .addGroup(meniuIntrariLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(campSarcinaIntrare, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(campTensiuneIntrare, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(campCurentInitial)
                            .addComponent(campTuratieInitiala))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(campKp, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(campTuratieTinta, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(campKi, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addGroup(meniuIntrariLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(butonAplicaIntrari, javax.swing.GroupLayout.DEFAULT_SIZE, 100, Short.MAX_VALUE)
                    .addComponent(checkBoxPI, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        meniuIntrariLayout.setVerticalGroup(
            meniuIntrariLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(meniuIntrariLayout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addGroup(meniuIntrariLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(campTensiuneIntrare, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(checkBoxPI))
                .addGap(18, 18, 18)
                .addGroup(meniuIntrariLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(campSarcinaIntrare, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(butonAplicaIntrari))
                .addGap(18, 18, 18)
                .addGroup(meniuIntrariLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel10)
                    .addComponent(campCurentInitial, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(meniuIntrariLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel11)
                    .addComponent(campTuratieInitiala, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(meniuIntrariLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(campTuratieTinta, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(labelTuratieTinta))
                .addGap(18, 18, 18)
                .addGroup(meniuIntrariLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(campKp, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(labelConstP))
                .addGap(18, 18, 18)
                .addGroup(meniuIntrariLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labelConstI)
                    .addComponent(campKi, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        meniuSimulare.setTitle("Configurare simulare");
        meniuSimulare.setMinimumSize(new java.awt.Dimension(328, 240));

        jLabel2.setText("Timp start");

        jLabel5.setText("Timp stop");

        jLabel6.setText("Pas de integrare");

        campPas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                campPasActionPerformed(evt);
            }
        });

        butonAplicaSimulare.setText("Aplica");
        butonAplicaSimulare.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                butonAplicaSimulareActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout meniuSimulareLayout = new javax.swing.GroupLayout(meniuSimulare.getContentPane());
        meniuSimulare.getContentPane().setLayout(meniuSimulareLayout);
        meniuSimulareLayout.setHorizontalGroup(
            meniuSimulareLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(meniuSimulareLayout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addGroup(meniuSimulareLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addGroup(meniuSimulareLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(campTimpStart)
                    .addComponent(campTimpStop, javax.swing.GroupLayout.DEFAULT_SIZE, 100, Short.MAX_VALUE)
                    .addComponent(campPas, javax.swing.GroupLayout.DEFAULT_SIZE, 100, Short.MAX_VALUE)
                    .addComponent(butonAplicaSimulare, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(101, Short.MAX_VALUE))
        );
        meniuSimulareLayout.setVerticalGroup(
            meniuSimulareLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(meniuSimulareLayout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addGroup(meniuSimulareLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(campTimpStart, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(meniuSimulareLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(campTimpStop, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(meniuSimulareLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(campPas, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(butonAplicaSimulare)
                .addContainerGap(38, Short.MAX_VALUE))
        );

        selectorFisiere.setCurrentDirectory(new java.io.File("C:\\Users\\Bogdan\\Documents\\Licenta\\MotorDC\\dist"));

        jMenuItem1.setText("jMenuItem1");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Simulator motor de curent continuu");

        configMotor.setText("Setari motor");
        configMotor.setMaximumSize(new java.awt.Dimension(72, 23));
        configMotor.setMinimumSize(new java.awt.Dimension(72, 23));
        configMotor.setPreferredSize(new java.awt.Dimension(72, 23));
        configMotor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                configMotorActionPerformed(evt);
            }
        });

        butonIntrari.setText("Setari intrari");
        butonIntrari.setMaximumSize(new java.awt.Dimension(72, 23));
        butonIntrari.setMinimumSize(new java.awt.Dimension(72, 23));
        butonIntrari.setPreferredSize(new java.awt.Dimension(72, 23));
        butonIntrari.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                butonIntrariActionPerformed(evt);
            }
        });

        butonSetariSimulare.setText("Setari simulare");
        butonSetariSimulare.setMaximumSize(new java.awt.Dimension(72, 23));
        butonSetariSimulare.setMinimumSize(new java.awt.Dimension(72, 23));
        butonSetariSimulare.setPreferredSize(new java.awt.Dimension(72, 23));
        butonSetariSimulare.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                butonSetariSimulareActionPerformed(evt);
            }
        });

        tabelMotorCurent.setModel(modelTabel = new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "La [H]", "Ra [Ohm]", "Kf", "J [Kg.m^2]", "f","Tensiune","Sarcina"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Double.class, java.lang.Double.class, java.lang.Double.class, java.lang.Double.class, java.lang.Double.class, java.lang.Double.class, java.lang.Double.class, java.lang.Double.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

        });
        tabelMotorCurent.getColumnModel().getColumn(3).setCellRenderer(new SmallNumberRenderer());
        tabelMotorCurent.getColumnModel().getColumn(4).setCellRenderer(new SmallNumberRenderer());
        jScrollPane1.setViewportView(tabelMotorCurent);

        jLabel7.setText("Timp start:");

        jLabel8.setText("Timp stop:");

        jLabel9.setText("Pas:");

        labelTimpStart.setText("jLabel10");

        labelTimpStop.setText("jLabel11");

        labelPas.setText("jLabel12");

        butonSimulare.setText("Start simulare");
        butonSimulare.setMaximumSize(new java.awt.Dimension(72, 23));
        butonSimulare.setMinimumSize(new java.awt.Dimension(72, 23));
        butonSimulare.setPreferredSize(new java.awt.Dimension(72, 23));
        butonSimulare.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                butonSimulareActionPerformed(evt);
            }
        });

        butonGrafice.setText("Grafice");
        butonGrafice.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                butonGraficeActionPerformed(evt);
            }
        });

        butonExport.setText("Export");
        butonExport.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                butonExportActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(butonSimulare, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 116, Short.MAX_VALUE)
                        .addComponent(butonGrafice, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(butonExport, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(butonSetariSimulare, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(butonIntrari, javax.swing.GroupLayout.DEFAULT_SIZE, 116, Short.MAX_VALUE)
                    .addComponent(configMotor, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel7)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(labelTimpStart)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel8)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(labelTimpStop)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel9)
                        .addGap(18, 18, 18)
                        .addComponent(labelPas)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 685, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap())))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(configMotor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel7)
                        .addComponent(labelTimpStart)
                        .addComponent(jLabel8)
                        .addComponent(labelTimpStop)
                        .addComponent(jLabel9)
                        .addComponent(labelPas))
                    .addComponent(butonIntrari, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(butonSetariSimulare, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(butonSimulare, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(butonGrafice)
                .addGap(18, 18, 18)
                .addComponent(butonExport)
                .addContainerGap(43, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void configMotorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_configMotorActionPerformed
        // TODO add your handling code here:
        campInductanta.setText(Double.toString(motor.getLa_H()));
        campRezistenta.setText(Double.toString(motor.getRa_Ohm()));
        campKf.setText(Double.toString(motor.getKf()));
        campFrecare.setText(Double.toString(motor.getF()));
        campInertie.setText(Double.toString(motor.getJ()));
        meniuMotor.setVisible(true);
    }//GEN-LAST:event_configMotorActionPerformed

    private void butonIntrariActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_butonIntrariActionPerformed
        // TODO add your handling code here:
        
        campTensiuneIntrare.setText(Double.toString(motor.getVa_Volts()));
        campSarcinaIntrare.setText(Double.toString(motor.getSarcina()));
        campCurentInitial.setText(Double.toString(rk.getYy0()[0]));
        campTuratieInitiala.setText(Double.toString(rk.getYy0()[1]));
        meniuIntrari.setVisible(true);
    }//GEN-LAST:event_butonIntrariActionPerformed

    private void buttonApplyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonApplyActionPerformed
        // TODO add your handling code here:
        
          try{
              double La = Double.parseDouble(campInductanta.getText());
              double Ra = Double.parseDouble(campRezistenta.getText());
              double Kf = Double.parseDouble(campKf.getText());
              double f = Double.parseDouble(campFrecare.getText());
              double J = Double.parseDouble(campInertie.getText());
              motor.setLa_H(La);
              motor.setRa_Ohm(Ra);
              motor.setKf(Kf);
              motor.setF(f);
              motor.setJ(J);
              JOptionPane.showMessageDialog(null, "Valori salvate cu success.", "", JOptionPane.INFORMATION_MESSAGE);
              refreshModel();
              meniuMotor.setVisible(false);
          }catch(NumberFormatException e){
              JOptionPane.showMessageDialog(null, "Toate campurile trebuie completate cu valori numerice.", "Eroare", JOptionPane.ERROR_MESSAGE);
          }catch(NullPointerException e){
              JOptionPane.showMessageDialog(null, "Toate Campurile trebuie completate.", "Eroare", JOptionPane.ERROR_MESSAGE);
          }
    }//GEN-LAST:event_buttonApplyActionPerformed

    private void campInertieActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_campInertieActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_campInertieActionPerformed

    private void campKfActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_campKfActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_campKfActionPerformed

    private void butonSetariSimulareActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_butonSetariSimulareActionPerformed
        // TODO add your handling code here:
        meniuSimulare.setVisible(true);
    }//GEN-LAST:event_butonSetariSimulareActionPerformed

    private void butonAplicaSimulareActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_butonAplicaSimulareActionPerformed
        // TODO add your handling code here:
        double timpStart = Double.parseDouble(campTimpStart.getText());
        double timpStop = Double.parseDouble(campTimpStop.getText());
        double pas = Double.parseDouble(campPas.getText());
        if(timpStart > timpStop){
            JOptionPane.showMessageDialog(null, "Timpul de stop trebuie sa fie mai mare decat timpul de .", "Eroare", JOptionPane.ERROR_MESSAGE);
        }else{
        try{
            rk.setFinalValueOfX(timpStop);
            rk.setInitialValueOfX(timpStart);
            rk.setPasIntegrare(pas);
            labelTimpStart.setText(Double.toString(timpStart));
            labelTimpStop.setText(Double.toString(timpStop));
            labelPas.setText(Double.toString(pas));
            JOptionPane.showMessageDialog(null, "Valori salvate cu success.", "", JOptionPane.INFORMATION_MESSAGE);
            refreshModel();
            meniuSimulare.setVisible(false);
        }catch(NumberFormatException e){
            JOptionPane.showMessageDialog(null, "Toate campurile trebuie completate cu valori numerice.", "Eroare", JOptionPane.ERROR_MESSAGE);
        }}
        
    }//GEN-LAST:event_butonAplicaSimulareActionPerformed

    private void butonSimulareActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_butonSimulareActionPerformed
        // TODO add your handling code here:
        if((rk.getX0() == Double.NaN) || (rk.getPasIntegrare()== Double.NaN) || (rk.getXn() == Double.NaN)){
            JOptionPane.showMessageDialog(null, "Toate campurile trebuie completate.", "Eroare", JOptionPane.ERROR_MESSAGE);
        }
        else{
            try{
            output = rk.RungeKuttaOrdin4(model);
            JOptionPane.showMessageDialog(null, "Simulare efectuata cu succes.", "", JOptionPane.INFORMATION_MESSAGE);
            butonGrafice.setVisible(true);
            butonExport.setVisible(true);
            }catch(IllegalArgumentException e){
            
                JOptionPane.showMessageDialog(null, "Introduceti valorile initiale ale marimilor de iesire", "", JOptionPane.INFORMATION_MESSAGE);
        }}
    }//GEN-LAST:event_butonSimulareActionPerformed

    private void butonGraficeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_butonGraficeActionPerformed
        // TODO add your handling code here:
        LinePlot graficCurent = new LinePlot("Intensitatea curentului",(double[])output.get(0),(double[])output.get(1));
        LinePlot graficTuratie = new LinePlot("Turatia motorului",(double[])output.get(0),(double[])output.get(2));
        graficCurent.setTitle("Intensitatea curentului");
        graficTuratie.setTitle("Turatia motorului");
        
        graficCurent.setVisible(true);
        graficTuratie.setVisible(true);
    }//GEN-LAST:event_butonGraficeActionPerformed

    private void butonExportActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_butonExportActionPerformed
        // TODO add your handling code here:
        if(selectorFisiere.showOpenDialog(this) == JFileChooser.APPROVE_OPTION){
            File directoSalvare = selectorFisiere.getSelectedFile();
            String locatieDirector = directoSalvare.getAbsolutePath();
            
            try{
            PrintToTXT(locatieDirector,output);
            JOptionPane.showMessageDialog(null, "Valori scrise cu success.", "Export", JOptionPane.INFORMATION_MESSAGE);
            }catch(Exception e){
                JOptionPane.showMessageDialog(null, e, "Eroare", JOptionPane.ERROR_MESSAGE);
            }
        }
    }//GEN-LAST:event_butonExportActionPerformed

    private void campKiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_campKiActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_campKiActionPerformed

    private void checkBoxPIActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_checkBoxPIActionPerformed
        // TODO add your handling code here:
        rk.setPIDEnable(checkBoxPI.isSelected());
        campTensiuneIntrare.setVisible(!checkBoxPI.isSelected());
        jLabel3.setVisible(!checkBoxPI.isSelected());
        labelTuratieTinta.setVisible(checkBoxPI.isSelected());
        campTuratieTinta.setVisible(checkBoxPI.isSelected());
        labelConstP.setVisible(checkBoxPI.isSelected());
        campKp.setVisible(checkBoxPI.isSelected());
        labelConstI.setVisible(checkBoxPI.isSelected());
        campKi.setVisible(checkBoxPI.isSelected());
    }//GEN-LAST:event_checkBoxPIActionPerformed

    private void butonAplicaIntrariActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_butonAplicaIntrariActionPerformed
        // TODO add your handling code here:
        try{
            double tensiuneIntrare = Double.parseDouble(campTensiuneIntrare.getText());
            double SarcinaIntrare = Double.parseDouble(campSarcinaIntrare.getText());
            double[] valoriInitiale = {Double.parseDouble(campCurentInitial.getText()), Double.parseDouble(campTuratieInitiala.getText())};
            if(tensiuneIntrare > 12 || tensiuneIntrare < 0){
                JOptionPane.showMessageDialog(null, "Tensiunea de intrare trebuie sa sa afle in intervalul [0,12]V", "Eroare", JOptionPane.ERROR_MESSAGE);
            }
            else{
                
                motor.setSarcina(SarcinaIntrare);
                motor.setVa_Volts(tensiuneIntrare);
                model.setKp( Double.parseDouble(campKp.getText()));
                model.setKi(Double.parseDouble(campKi.getText()));
                model.setTuratieTinta(Double.parseDouble(campTuratieTinta.getText()));
                rk.setInitialValuesOfY(valoriInitiale);
                
                meniuIntrari.setVisible(false);
                refreshModel();
                JOptionPane.showMessageDialog(null, "Valori salvate cu success.", "", JOptionPane.INFORMATION_MESSAGE);}
        }catch(NumberFormatException e){
            JOptionPane.showMessageDialog(null, "Toate campurile trebuie completate cu valori numerice.", "Eroare", JOptionPane.ERROR_MESSAGE);
        }catch(IllegalArgumentException e){
            JOptionPane.showMessageDialog(meniuIntrari, e, "Eroare", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_butonAplicaIntrariActionPerformed

    private void campTensiuneIntrareActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_campTensiuneIntrareActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_campTensiuneIntrareActionPerformed

    private void campPasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_campPasActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_campPasActionPerformed

    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new GUI().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton butonAplicaIntrari;
    private javax.swing.JButton butonAplicaSimulare;
    private javax.swing.JButton butonExport;
    private javax.swing.JButton butonGrafice;
    private javax.swing.JButton butonIntrari;
    private javax.swing.JButton butonSetariSimulare;
    private javax.swing.JButton butonSimulare;
    private javax.swing.JButton buttonApply;
    private javax.swing.JTextField campCurentInitial;
    private javax.swing.JTextField campFrecare;
    private javax.swing.JTextField campInductanta;
    private javax.swing.JTextField campInertie;
    private javax.swing.JTextField campKf;
    private javax.swing.JTextField campKi;
    private javax.swing.JTextField campKp;
    private javax.swing.JTextField campPas;
    private javax.swing.JTextField campRezistenta;
    private javax.swing.JTextField campSarcinaIntrare;
    private javax.swing.JTextField campTensiuneIntrare;
    private javax.swing.JTextField campTimpStart;
    private javax.swing.JTextField campTimpStop;
    private javax.swing.JTextField campTuratieInitiala;
    private javax.swing.JTextField campTuratieTinta;
    private javax.swing.JCheckBox checkBoxPI;
    private javax.swing.JButton configMotor;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel labelConstI;
    private javax.swing.JLabel labelConstP;
    private javax.swing.JLabel labelConstantaMotor;
    private javax.swing.JLabel labelInductanta;
    private javax.swing.JLabel labelPas;
    private javax.swing.JLabel labelRezistenta;
    private javax.swing.JLabel labelTimpStart;
    private javax.swing.JLabel labelTimpStop;
    private javax.swing.JLabel labelTuratieTinta;
    private javax.swing.JLabel labellnertie;
    private javax.swing.JFrame meniuIntrari;
    private javax.swing.JFrame meniuMotor;
    private javax.swing.JFrame meniuSimulare;
    private javax.swing.JFileChooser selectorFisiere;
    // End of variables declaration//GEN-END:variables
}
